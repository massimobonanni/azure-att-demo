{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualMachines_vm1_name": {
      "defaultValue": "vm1",
      "type": "String"
    },
    "virtualMachines_vm2_name": {
      "defaultValue": "vm2",
      "type": "String"
    },
    "networkInterfaces_vm1_name": {
      "defaultValue": "vm1313",
      "type": "String"
    },
    "networkInterfaces_vm2_name": {
      "defaultValue": "vm2341",
      "type": "String"
    },
    "publicIPAddresses_vm1_ip_name": {
      "defaultValue": "vm1-ip",
      "type": "String"
    },
    "publicIPAddresses_vm2_ip_name": {
      "defaultValue": "vm2-ip",
      "type": "String"
    },
    "networkSecurityGroups_nsg_name": {
      "defaultValue": "vm1-nsg",
      "type": "String"
    },
    "availabilitySets_VMAvailabilitySet_name": {
      "defaultValue": "VMAvailabilitySet",
      "type": "String"
    },
    "loadBalancers_VMAvailabilityBalancer_name": {
      "defaultValue": "VMAvailabilityBalancer",
      "type": "String"
    },
    "virtualNetworks_VMAvailabilityDemo_vnet_name": {
      "defaultValue": "VMAvailabilityDemo-vnet",
      "type": "String"
    },
    "storageAccounts_vmavailabilitydemorgdiag_name": {
      "defaultValue": "vmavailabilitydemorgdiag",
      "type": "String"
    },
    "publicIPAddresses_VMAvailabilityBalancer_ip_name": {
      "defaultValue": "VMAvailabilityBalancer-ip",
      "type": "String"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-11-01",
      "name": "[parameters('networkSecurityGroups_nsg_name')]",
      "location": "northeurope",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "HTTPS",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 320,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "HTTP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 340,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-11-01",
      "name": "[parameters('publicIPAddresses_vm1_ip_name')]",
      "location": "northeurope",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "ipAddress": "40.69.90.76",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-11-01",
      "name": "[parameters('publicIPAddresses_vm2_ip_name')]",
      "location": "northeurope",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "ipAddress": "40.69.26.59",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-11-01",
      "name": "[parameters('publicIPAddresses_VMAvailabilityBalancer_ip_name')]",
      "location": "northeurope",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "ipAddress": "40.69.72.88",
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-11-01",
      "name": "[parameters('virtualNetworks_VMAvailabilityDemo_vnet_name')]",
      "location": "northeurope",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.2.0/24"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.0.2.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false,
        "enableVmProtection": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[parameters('storageAccounts_vmavailabilitydemorgdiag_name')]",
      "location": "northeurope",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2019-11-01",
      "name": "[concat(parameters('networkSecurityGroups_nsg_name'), '/HTTP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "80",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 340,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2019-11-01",
      "name": "[concat(parameters('networkSecurityGroups_nsg_name'), '/HTTPS')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "443",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 320,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2019-11-01",
      "name": "[concat(parameters('networkSecurityGroups_nsg_name'), '/RDP')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_name'))]"
      ],
      "properties": {
        "protocol": "TCP",
        "sourcePortRange": "*",
        "destinationPortRange": "3389",
        "sourceAddressPrefix": "*",
        "destinationAddressPrefix": "*",
        "access": "Allow",
        "priority": 300,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2019-11-01",
      "name": "[concat(parameters('virtualNetworks_VMAvailabilityDemo_vnet_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_VMAvailabilityDemo_vnet_name'))]"
      ],
      "properties": {
        "addressPrefix": "10.0.2.0/24",
        "delegations": [],
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(parameters('storageAccounts_vmavailabilitydemorgdiag_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_vmavailabilitydemorgdiag_name'))]"
      ],
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(parameters('storageAccounts_vmavailabilitydemorgdiag_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_vmavailabilitydemorgdiag_name'))]"
      ],
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2019-07-01",
      "name": "[parameters('availabilitySets_VMAvailabilitySet_name')]",
      "location": "northeurope",
      "sku": {
        "name": "Aligned"
      },
      "properties": {
        "platformUpdateDomainCount": 5,
        "platformFaultDomainCount": 2,
        "virtualMachines": [
          {
            "id": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_vm1_name'))]"
          },
          {
            "id": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_vm2_name'))]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(parameters('storageAccounts_vmavailabilitydemorgdiag_name'), '/default/bootdiagnostics-vm1-9b49e34e-d04e-40ef-9bef-760d744f103a')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_vmavailabilitydemorgdiag_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_vmavailabilitydemorgdiag_name'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(parameters('storageAccounts_vmavailabilitydemorgdiag_name'), '/default/bootdiagnostics-vm2-62abcead-005b-4a18-ae54-5cc8921f0bb3')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_vmavailabilitydemorgdiag_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_vmavailabilitydemorgdiag_name'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-07-01",
      "name": "[parameters('virtualMachines_vm1_name')]",
      "location": "northeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_VMAvailabilitySet_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm1_name'))]",
        "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_vmavailabilitydemorgdiag_name'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_VMAvailabilitySet_name'))]"
        },
        "hardwareProfile": {
          "vmSize": "Standard_DS3_v2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('virtualMachines_vm1_name'), '_OsDisk_1_a373da24f6cc4e4fbffa551311068992')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Premium_LRS",
              "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_vm1_name'), '_OsDisk_1_a373da24f6cc4e4fbffa551311068992'))]"
            },
            "diskSizeGB": 127
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_vm1_name')]",
          "adminUsername": "azureuser",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": [],
          "allowExtensionOperations": true,
          "requireGuestProvisionSignal": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm1_name'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https://', parameters('storageAccounts_vmavailabilitydemorgdiag_name'), '.blob.core.windows.net/')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-07-01",
      "name": "[parameters('virtualMachines_vm2_name')]",
      "location": "northeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_VMAvailabilitySet_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm2_name'))]",
        "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_vmavailabilitydemorgdiag_name'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySets_VMAvailabilitySet_name'))]"
        },
        "hardwareProfile": {
          "vmSize": "Standard_DS3_v2"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[concat(parameters('virtualMachines_vm2_name'), '_OsDisk_1_288a7b11ea6d4b9ebae2f5e22da6d2ae')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Premium_LRS",
              "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_vm2_name'), '_OsDisk_1_288a7b11ea6d4b9ebae2f5e22da6d2ae'))]"
            },
            "diskSizeGB": 127
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachines_vm2_name')]",
          "adminUsername": "azureuser",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "secrets": [],
          "allowExtensionOperations": true,
          "requireGuestProvisionSignal": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm2_name'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https://', parameters('storageAccounts_vmavailabilitydemorgdiag_name'), '.blob.core.windows.net/')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2019-11-01",
      "name": "[parameters('loadBalancers_VMAvailabilityBalancer_name')]",
      "location": "northeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_VMAvailabilityBalancer_ip_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm1_name'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm2_name'))]"
      ],
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_VMAvailabilityBalancer_ip_name'))]"
              },
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "WebServers",
            "properties": {
              "provisioningState": "Succeeded",
              "backendIPConfigurations": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm1_name')), '/ipConfigurations/ipconfig1')]"
                },
                {
                  "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_vm2_name')), '/ipConfigurations/ipconfig1')]"
                }
              ],
              "loadBalancingRules": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_VMAvailabilityBalancer_name')), '/loadBalancingRules/WebRule')]"
                }
              ]
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "WebRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_VMAvailabilityBalancer_name')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
              },
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp",
              "enableTcpReset": false,
              "loadDistribution": "Default",
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_VMAvailabilityBalancer_name')), '/backendAddressPools/WebServers')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_VMAvailabilityBalancer_name')), '/probes/Probe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "Probe",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "inboundNatRules": [],
        "inboundNatPools": []
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-11-01",
      "name": "[parameters('networkInterfaces_vm1_name')]",
      "location": "northeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vm1_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VMAvailabilityDemo_vnet_name'), 'default')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.0.2.4",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vm1_ip_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VMAvailabilityDemo_vnet_name'), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4",
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_VMAvailabilityBalancer_name')), '/backendAddressPools/WebServers')]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": true,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_name'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-11-01",
      "name": "[parameters('networkInterfaces_vm2_name')]",
      "location": "northeurope",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vm2_ip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VMAvailabilityDemo_vnet_name'), 'default')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.0.2.5",
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vm2_ip_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_VMAvailabilityDemo_vnet_name'), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4",
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_VMAvailabilityBalancer_name')), '/backendAddressPools/WebServers')]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": true,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_nsg_name'))]"
        }
      }
    }
  ]
}